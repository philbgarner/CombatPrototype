{"version":3,"file":"bfont-imui.js","mappings":"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","sources":["webpack://imui/webpack/universalModuleDefinition","webpack://imui/external umd \"canvas\"","webpack://imui/webpack/bootstrap","webpack://imui/webpack/runtime/define property getters","webpack://imui/webpack/runtime/hasOwnProperty shorthand","webpack://imui/webpack/runtime/make namespace object","webpack://imui/./src/elements/Element.js","webpack://imui/./src/elements/FrameFlat.js","webpack://imui/./src/elements/Frame3d.js","webpack://imui/./src/elements/Button3d.js","webpack://imui/./src/elements/ButtonFlat.js","webpack://imui/./src/elements/TextBoxFlat.js","webpack://imui/./src/elements/List.js","webpack://imui/./src/elements/Image.js","webpack://imui/./src/elements/FrameImage.js","webpack://imui/./src/elements/ButtonImage.js","webpack://imui/./src/elements/ListImage.js","webpack://imui/./src/imui.js","webpack://imui/./src/elements.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"canvas\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"canvas\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"imui\"] = factory(require(\"canvas\"));\n\telse\n\t\troot[\"imui\"] = factory(root[\"canvas\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__517__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__517__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createCanvas } from 'canvas'\r\nimport { BezierBlend, updateDelay } from '../imui.js'\r\n\r\nclass Element {\r\n    constructor(params) {\r\n        if (!params.id) {\r\n            throw new Error('Element must have unique id.')\r\n        }\r\n        this.id = params.id\r\n\r\n        this.autosize = params.autosize ? params.autosize : true\r\n        if (params.rect) {\r\n            this.autosize = false\r\n        }\r\n        this.rect = params.rect ? params.rect : { x: 0, y: 0, w: 0, h: 0 }\r\n        this.color = params.color ? params.color : '#ccccccff'\r\n        this.bgcolor = params.bgcolor ? params.bgcolor : undefined\r\n        this.text = params.text ? params.text : ''\r\n        this.prevText = this.text\r\n\r\n        this.anim = params.anim ? params.anim : null\r\n        \r\n        this.wrap = params.wrap ? params.wrap : ''\r\n\r\n        this.font = params.font ? params.font : imui.font\r\n\r\n        this.rect.x = params.x ? params.x : this.rect.x\r\n        this.rect.y = params.y ? params.y : this.rect.y\r\n\r\n        this.state = {\r\n            clicked: false,\r\n            mouseOver: false,\r\n            mouseDown: false,\r\n            mouseUp: false,\r\n            change: true\r\n        }\r\n        this.prevState = params.prevState ? params.prevState :\r\n            {\r\n                clicked: false,\r\n                mouseOver: false,\r\n                mouseDown: false,\r\n                mouseUp: false,\r\n                change: false\r\n            }\r\n\r\n    }\r\n\r\n    DidChangeState() {\r\n        return this.prevState.clicked !== this.state.clicked ||\r\n            this.prevState.mouseOver !== this.state.mouseOver ||\r\n            this.prevState.mouseDown !== this.state.mouseDown ||\r\n            this.prevState.mouseUp !== this.state.mouseUp ||\r\n            this.prevState.change !== this.state.change\r\n    }\r\n\r\n    BuildPreviousState() {\r\n        return {\r\n            clicked: this.state.clicked,\r\n            mouseOver: this.state.mouseOver,\r\n            mouseDown: this.state.mouseDown,\r\n            mouseUp: this.state.mouseUp,\r\n            change: this.state.change\r\n        }\r\n    }\r\n\r\n    InsideRect(x, y, rect) {\r\n        let r = rect ? rect : this.Rect()\r\n        return x >= r.x && x < r.x + r.w && y >= r.y && y < r.y + r.h\r\n    }\r\n\r\n    Clicked() { return this.state.clicked }\r\n    Hover() { return this.state.mouseOver }\r\n    MouseDown() { return this.state.mouseDown }\r\n    MouseUp() { return this.state.mouseUp }\r\n\r\n    setState(params) {\r\n        this.prevState = this.BuildPreviousState()\r\n        for (let p in params) {\r\n            this.state[p] = params[p]\r\n        }\r\n    }\r\n\r\n    Rect() {\r\n        let rect = {\r\n            x: this.rect.x,\r\n            y: this.rect.y,\r\n            w: this.rect.w,\r\n            h: this.rect.h\r\n        }\r\n        if (this.parent) {\r\n            rect.x += this.parent.Rect().x\r\n            rect.y += this.parent.Rect().y\r\n        }\r\n        return rect\r\n    }\r\n\r\n    Update(imui, eventHandled) {\r\n        let evt = false\r\n        //let cfont = this.font ? this.font : imui.font\r\n        // if (this.autosize) {\r\n        //     this.Rect().w = this.text.length * cfont.cwidth\r\n        //     this.Rect().h = cfont.cheight\r\n        //     if (this.text && this.text.length > 0) {\r\n        //         this.Rect().h = cfont.cheight * this.text.split('\\n').length\r\n        //     }\r\n        // }\r\n        if (!this.anim) {\r\n            if (this.state.clicked && this.id !== imui.active) {\r\n                imui.active = this.id\r\n                this.setState({ changed: true })\r\n                evt = true\r\n            }\r\n            if (imui.mousePos.x >= this.Rect().x && imui.mousePos.y >= this.Rect().y && imui.mousePos.x <= this.Rect().x + this.Rect().w && imui.mousePos.y <= this.Rect().y + this.Rect().h) {\r\n                if (this.state.mouseOver && this.state.clicked) {\r\n                    this.setState({ mouseOver: true, clicked: false})\r\n                    evt = true\r\n                } else if (!eventHandled) {\r\n                    this.setState({ mouseOver: true })\r\n                    evt = true\r\n                }\r\n                if (imui.mouseButton > 0 && !this.state.mouseDown) {\r\n                    this.setState({ mouseDown: true, mouseButton: imui.mouseButton })\r\n                    evt = true\r\n                } else if (imui.mouseButton === 0 && this.prevState.mouseDown) {\r\n                    this.setState({ mouseUp: true, mouseDown: false })\r\n                    evt = true\r\n                }\r\n            } else {\r\n                this.setState({ mouseOver: false, mouseDown: false, mouseUp: false, clicked: false })\r\n            }\r\n            if (imui.mouseButton === 0 && this.state.mouseUp) {\r\n                this.setState({ mouseUp: false, clicked: true })\r\n                imui.active = this.id\r\n                evt = true\r\n            }\r\n            if (this.text !== this.prevText) {\r\n                this.setState({ change: true })\r\n                this.prevText = this.text\r\n            } else {\r\n                this.setState({ change: false })\r\n            }        \r\n            \r\n            // anim: {\r\n            //     curve: 'bezier',\r\n            //     duration: 1000,\r\n            //     params: {\r\n            //         x: 0, y: 400\r\n            //     }\r\n        } else {\r\n            if (this.anim.curve === 'bezier') {\r\n                this.anim.elapsed = this.anim.elapsed === undefined ? 0 : this.anim.elapsed\r\n                for (let param in this.anim.params) {\r\n                    let startVal = this.anim.params[param]\r\n                    this.anim.destination = this.anim.destination ? this.anim.destination : {}\r\n                    if (param === 'x' || param === 'y' || param === 'w' || param === 'h') {\r\n                        this.anim.destination[param] = this.anim.destination[param] !== undefined ? this.anim.destination[param] : this.rect[param]\r\n                        if (this.anim.destination[param] > startVal) {\r\n                            this.rect[param] = parseInt(startVal + (this.anim.destination[param] - startVal) * BezierBlend(this.anim.elapsed / this.anim.duration))\r\n                        } else {\r\n                            this.rect[param] = parseInt(startVal - (startVal - this.anim.destination[param]) * BezierBlend(this.anim.elapsed / this.anim.duration))\r\n                        }\r\n                        \r\n                    }\r\n                    \r\n                }\r\n                this.anim.elapsed += updateDelay\r\n                if (this.anim.elapsed >= this.anim.duration) {\r\n\r\n                    for (let param in this.anim.params) {\r\n                        if (param === 'x' || param === 'y' || param === 'w' || param === 'h') {\r\n                            this.rect[param] = this.anim.destination[param]\r\n                        }                        \r\n                    }\r\n\r\n                    if (this.anim.onComplete) {\r\n                        this.anim.onComplete(this)\r\n                    }\r\n                    this.anim = null\r\n                }\r\n            }\r\n        }\r\n        return evt\r\n    }\r\n\r\n    GetMaxTextWidth(font, txt) {\r\n        let lines = []\r\n        try {\r\n            if (typeof txt === 'number') {\r\n                txt = font.codepage.filter(f => f.codenumber === txt)[0].symbol\r\n            }\r\n            lines = txt.split('\\n')\r\n        } catch (e) {\r\n            console.log('Error splitting txt parameters: ', e, ' typeof txt =', typeof txt)\r\n        }\r\n        let w = 0\r\n        for (let l in lines) {\r\n            let line = lines[l]\r\n            let lineLen = 0\r\n            for (let c in line) {\r\n                let char = font.codepage.filter(f => f.symbol === line[c])\r\n                if (char.length > 0) {\r\n                    if (char[0].rect) {\r\n                        lineLen += char[0].rect.w\r\n                    }\r\n                }\r\n            }\r\n            if (lineLen > w) {\r\n                w = lineLen\r\n            }\r\n        }\r\n        return w\r\n    }\r\n\r\n    GetWrappedText(font, txt, rect) {\r\n        let lines = txt.split('\\n')\r\n        let wrapPos = parseInt(rect.w / font.cwidth)\r\n        let c = 0\r\n        while (this.GetMaxTextWidth(font, lines.join('\\n')) >= rect.w && c <= 100) {\r\n            let newLines = []\r\n            for (let l in lines) {\r\n                let lineWidth = lines[l].length * font.cwidth\r\n                if (lineWidth > rect.w) {\r\n                    newLines.push(lines[l].slice(0, wrapPos).trim(),\r\n                                    lines[l].slice(wrapPos, lines[l].length).trim())\r\n                } else {\r\n                    newLines.push(lines[l])\r\n                }\r\n            }\r\n            lines = newLines\r\n            c++\r\n        }\r\n        return lines.join('\\n')\r\n    }\r\n\r\n    GetWordWrappedText(font, txt, rect) {\r\n        let lines = txt.split('\\n')\r\n        let wrapPos = parseInt(rect.w / font.cwidth)\r\n        let c = 0\r\n        while (this.GetMaxTextWidth(font, lines.join('\\n')) >= rect.w && c <= 100) {\r\n            let newLines = []\r\n            for (let l in lines) {\r\n                let lineWidth = lines[l].length * font.cwidth\r\n                if (lineWidth > rect.w) {\r\n                    // newLines.push(lines[l].slice(0, wrapPos).trim(),\r\n                    //                 lines[l].slice(wrapPos, lines[l].length).trim())\r\n                    let line = lines[l].substring(0, wrapPos).split('').reverse().join('')\r\n                    let index = line.search(/\\s/)\r\n                    newLines.push(lines[l].slice(0, wrapPos - index).trim(),\r\n                                        lines[l].slice(wrapPos - index, lines[l].length).trim())\r\n                } else {\r\n                    newLines.push(lines[l])\r\n                }\r\n            }\r\n            lines = newLines\r\n            c++\r\n        }\r\n        return lines.join('\\n')\r\n    }\r\n\r\n    DoTextWrap(font) {\r\n        let txt = this.text ? this.text : ''\r\n\r\n        font = font ? font : bfontjs.Fonts().default\r\n        if (this.GetMaxTextWidth(font, txt) > this.Rect().w) {\r\n            if (this.wrap === 'clip') {\r\n                let rectCharWidth = Math.floor(this.Rect().w / font.cwidth)\r\n                txt = txt.substring(0, rectCharWidth)\r\n            } else if (this.wrap === 'ellipses') {\r\n                let rectCharWidth = Math.floor(this.Rect().w / font.cwidth)\r\n                txt = txt.substring(0, rectCharWidth - 3)\r\n                txt += '...'\r\n            } else if (this.wrap === 'wrap') {\r\n                txt = this.GetWrappedText(font, txt, this.Rect())\r\n            } else if (this.wrap === 'word-wrap') {\r\n                txt = this.GetWordWrappedText(font, txt, this.Rect())\r\n            }\r\n        }\r\n        txt = typeof txt === 'string' ? txt : ''\r\n        let wid = this.GetMaxTextWidth(font, txt)\r\n        let hgt = txt.split('\\n').length * font.cheight\r\n        let ret = { text: txt, w: wid > this.Rect().w ? wid : this.Rect().w, h: hgt > this.Rect().h ? hgt : this.Rect().h }\r\n        // if (this.autosize) {\r\n        //     this.rect = ret\r\n        // }\r\n        return ret\r\n    }\r\n\r\n    DrawText(imui, font, rect) {\r\n        let textcolor = this.color\r\n        if (this.id === imui.active) {\r\n            textcolor = this.highlight ? this.highlight : textcolor\r\n        }\r\n        let wrap = this.DoTextWrap(font)\r\n        imui.DrawTextFont(font, rect.x, rect.y, wrap.text, textcolor)\r\n        rect.h = wrap.h\r\n        rect.w = wrap.w\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let cfont = this.font ? this.font : imui.font\r\n        this.DrawText(imui, cfont, rect)\r\n    }\r\n\r\n    Draw(imui) {\r\n        let ctx = imui.ctx\r\n        ctx.save()\r\n        if (this.parent) {\r\n            ctx.beginPath()\r\n            ctx.rect(this.parent.Rect().x, this.parent.Rect().y, this.parent.Rect().w, this.parent.Rect().h)\r\n            ctx.closePath()\r\n            ctx.clip()\r\n        }\r\n        this._Draw(imui, this.Rect())\r\n        ctx.restore()\r\n    }\r\n\r\n    Animate(duration, fromRect, toRect, onComplete) {\r\n        this.anim = {\r\n            curve: 'bezier',\r\n            duration: duration,\r\n            params: fromRect,\r\n            onComplete: onComplete ? onComplete : () => {}\r\n        }\r\n        this.rect = toRect\r\n    }\r\n}\r\n\r\nexport default Element\r\n","import Element from './Element.js'\r\n\r\nclass FrameFlat extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let borderRect = { x: rect.x + imui.font.cwidth / 2, y: rect.y + imui.font.cheight / 2, w: rect.w - imui.font.cwidth, h: rect.h - imui.font.cheight}\r\n        imui.StrokeRect(borderRect, this.color)\r\n\r\n        imui.DrawText(rect.x + imui.font.cwidth, rect.y + imui.font.cheight, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default FrameFlat","import Element from './Element.js'\r\n\r\nclass Frame3d extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let borderRect = { x: rect.x + imui.font.cwidth / 2, y: rect.y + imui.font.cheight / 2, w: rect.w - imui.font.cwidth, h: rect.h - imui.font.cheight}\r\n\r\n        let highlight = !this.inverted ? this.highlight : this.shadow\r\n        let shadow = !this.inverted ? this.shadow : this.highlight\r\n\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x + borderRect.w, borderRect.y, highlight)\r\n        imui.StrokeLine(borderRect.x + borderRect.w, borderRect.y, borderRect.x + borderRect.w, borderRect.y + borderRect.h, highlight)\r\n        imui.StrokeLine(borderRect.x, borderRect.y + borderRect.h, borderRect.x + borderRect.w, borderRect.y + borderRect.h, shadow)\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x, borderRect.y + borderRect.h, shadow)\r\n\r\n        imui.DrawText(rect.x + imui.font.cwidth, rect.y + imui.font.cheight, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default Frame3d","import Element from './Element.js'\r\n\r\nclass Button3d extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let borderRect = { x: rect.x + imui.font.cwidth / 2, y: rect.y + imui.font.cheight / 2, w: rect.w - imui.font.cwidth, h: rect.h - imui.font.cheight}\r\n        \r\n        let inverted = this.inverted ? this.inverted : false\r\n        if (this.state.mouseDown) {\r\n            inverted = true\r\n        }\r\n\r\n        let highlight = !inverted ? this.highlight : this.shadow\r\n        let shadow = !inverted ? this.shadow : this.highlight\r\n\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x + borderRect.w, borderRect.y, highlight)\r\n        imui.StrokeLine(borderRect.x + borderRect.w, borderRect.y, borderRect.x + borderRect.w, borderRect.y + borderRect.h, highlight)\r\n        imui.StrokeLine(borderRect.x, borderRect.y + borderRect.h, borderRect.x + borderRect.w, borderRect.y + borderRect.h, shadow)\r\n        imui.StrokeLine(borderRect.x, borderRect.y, borderRect.x, borderRect.y + borderRect.h, shadow)\r\n\r\n        let mx = 0, my = 0\r\n        if (this.state.mouseDown) {\r\n            mx = parseInt(imui.font.cwidth * 0.3)\r\n            my = parseInt(imui.font.cheight * 0.1)\r\n        }\r\n        imui.DrawText(borderRect.x + mx + borderRect.w / 2 - (txt.length * imui.font.cwidth) / 2, borderRect.y + my + borderRect.h / 2 - imui.font.cheight / 2, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default Button3d","import Element from './Element.js'\r\n\r\nclass ButtonFlat extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.rect.h = parseInt(this.rect.h / 16) * 16\r\n        this.rect.w = parseInt(this.rect.w / 9) * 9\r\n\r\n        this.leftChar = params.leftChar ? params.leftChar : '<'\r\n        this.rightChar = params.rightChar ? params.rightChar : '>'\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            if (this.state.mouseDown) {\r\n                textcolor = this.bgcolor\r\n                bgcolor = this.color\r\n            }\r\n\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n        if (this.id === imui.active) {\r\n            textcolor = this.highlight ? this.highlight : textcolor\r\n        }\r\n\r\n        imui.DrawText(rect.x + rect.w / 2 - (txt.length * imui.font.cwidth) / 2, rect.y + rect.h / 2 - imui.font.cheight / 2, txt, textcolor)\r\n\r\n        imui.DrawText(rect.x, rect.y + rect.h / 2 - imui.font.cheight / 2, this.leftChar, textcolor)\r\n        imui.DrawText(rect.x + rect.w - imui.font.cwidth, rect.y + rect.h / 2 - imui.font.cheight / 2, this.rightChar, textcolor)\r\n    }\r\n}\r\n\r\nexport default ButtonFlat","import Element from './Element.js'\r\n\r\nclass TextBoxFlat extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.text = params.defaultText ? params.defaultText : ''\r\n        this.font = params.font ? params.font : null\r\n\r\n        if (this.font) {\r\n            this.rect.h = parseInt((this.rect.h / this.font.cheight) * this.font.cheight)\r\n            this.rect.w = this.GetMaxTextWidth(this.font, this.text)\r\n        } else {\r\n            this.rect.w = 8\r\n            this.rect.h = 8\r\n        }\r\n            \r\n        this.editable = params.editable ? params.editable : true\r\n\r\n        if (params.drawBuffer) {\r\n            this.InitializeBuffer({x: 9, y: 32})\r\n        }\r\n    }\r\n\r\n    Text() { return this.text }\r\n\r\n    _Draw(imui, rect) {\r\n        if (!this.font) {\r\n            this.font = imui.font\r\n        }\r\n        let txt = this.text\r\n\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            if (this.state.mouseDown) {\r\n                textcolor = this.bgcolor\r\n                bgcolor = this.color\r\n            }\r\n\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n\r\n        if (this.id === imui.active) {\r\n            textcolor = this.highlight ? this.highlight : textcolor\r\n            if (Date.now() % 1000 > 500) {\r\n                imui.DrawTextFont(this.font, rect.x + this.GetMaxTextWidth(this.font, `${txt}`), rect.y + rect.h / 2 - this.font.cheight / 2, '_', textcolor)\r\n            }\r\n        }\r\n        imui.DrawTextFont(this.font, rect.x, rect.y + rect.h / 2 - this.font.cheight / 2, txt, textcolor)\r\n    }\r\n}\r\n\r\nexport default TextBoxFlat","import Element from './Element.js'\r\n\r\nclass List extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.bgScrollbar = params.bgScrollbar ? params.bgScrollbar : '#645355ff'\r\n        this.list = params.list ? params.list : []\r\n        this.currentItem = null\r\n        this.scrollOffset = params.scrollOffset ? params.scrollOffset : 0\r\n        this.topDown = params.topDown ? params.topDown : true\r\n        this.horizontal = params.horizontal ? params.horizontal : false\r\n        this.scrollbar = params.scrollbar ? params.scrollbar : true\r\n\r\n        this.scrollbarCharacters = {\r\n            scrollUp: params.scrollUp ? params.scrollUp : 252,\r\n            scrollDown: params.scrollDown ? params.scrollDown : 253,\r\n            scrollCaret: params.scrollCaret ? params.scrollCaret : 254\r\n        }\r\n\r\n        this.draggingCaret = false\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n\r\n        let dx = rect.x + imui.font.cwidth\r\n        let dy = rect.y\r\n        for (let l = this.scrollOffset; l < this.list.length; l++) {\r\n            let txt = this.list[l]\r\n\r\n            let txtRect = { x: dx, y: dy, w: txt.length * imui.font.cwidth, h: imui.font.cheight }\r\n            let isHoverItem = this.state.mouseOver &&\r\n                imui.mousePos.y >= txtRect.y && imui.mousePos.x >= txtRect.x &&\r\n                imui.mousePos.x < txtRect.x + txtRect.w && imui.mousePos.y < txtRect.y + txtRect.h\r\n            let isMouseDownItem = this.state.mouseDown && imui.mousePos.y >= txtRect.y && imui.mousePos.x >= txtRect.x &&\r\n                    imui.mousePos.x < txtRect.x + txtRect.w && imui.mousePos.y < txtRect.y + txtRect.h\r\n            if (isMouseDownItem) {\r\n                this.currentItem = l\r\n            }\r\n\r\n            imui.DrawText(dx, dy, txt, isHoverItem ? textcolor : this.color, isHoverItem || this.currentItem === l ? { background: { colour: isMouseDownItem ? '#ccccccff' : this.bgScrollbar }} : undefined)\r\n            if (!this.horizontal) {\r\n                dy += imui.font.cheight\r\n            } else {\r\n                dx += imui.font.cwidth * (txt.length + 1)\r\n            }\r\n            if (dx > rect.x + rect.w) {\r\n                break\r\n            }\r\n            if (dy + imui.font.cheight > rect.y + rect.h) {\r\n                break\r\n            }\r\n        }\r\n        \r\n        if (this.Rect().h < imui.font.cheight * this.list.length && !this.horizontal) {\r\n            let upRect = { x: rect.x + rect.w - imui.font.cwidth, y: rect.y, w: imui.font.cwidth, h: imui.font.cheight}\r\n            let downRect = { x: rect.x + rect.w - imui.font.cwidth, y: rect.y + rect.h - imui.font.cheight, w: imui.font.cwidth, h: imui.font.cheight}\r\n            let scrollBarRect = { x: rect.x + rect.w - imui.font.cwidth, y: rect.y + imui.font.cheight, w: imui.font.cwidth, h: rect.h - (imui.font.cheight * 2) }\r\n            imui.DrawRect(scrollBarRect, this.bgScrollbar)\r\n            imui.DrawText(upRect.x, upRect.y, this.scrollbarCharacters.scrollUp, this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.state.mouseDown ? this.highlight : this.color, \r\n                this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.state.mouseDown ? { background: { colour: this.color } } : { background: { colour: this.bgScrollbar } })\r\n            imui.DrawText(downRect.x, downRect.y, this.scrollbarCharacters.scrollDown, this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.state.mouseDown ? this.highlight : this.color, \r\n                this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.state.mouseDown ? { background: { colour: this.color } } : { background: { colour: this.bgScrollbar } })\r\n\r\n            let caretPos = (this.scrollOffset / (this.list.length - 1)) * scrollBarRect.h\r\n            let caretColr = this.color\r\n            let caretBg = this.bgScrollbar\r\n\r\n            if (!this.draggingCaret) {\r\n                if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        this.scrollOffset = this.scrollOffset - 1 < 0 ? 0: this.scrollOffset - 1\r\n                    }\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        this.scrollOffset = this.scrollOffset + 1 > this.list.length - 1 ? this.list.length - 1: this.scrollOffset + 1\r\n                    }\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, { x: scrollBarRect.x, y: scrollBarRect.y + caretPos, w: scrollBarRect.w, h: imui.font.cwidth}) && this.state.mouseDown) {\r\n                    this.draggingCaret = true\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, scrollBarRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        if (imui.mousePos.y < scrollBarRect.y + caretPos) {\r\n                            this.scrollOffset = this.scrollOffset - 10 > 0 ? this.scrollOffset - 10 : 0\r\n                        } else if (imui.mousePos.y > scrollBarRect.y + caretPos + imui.font.cheight) {\r\n                            this.scrollOffset = this.scrollOffset + 10 < this.list.length - 1 ? this.scrollOffset + 10 : this.list.length - 1\r\n                        }\r\n                    }\r\n                }\r\n            } else if (this.draggingCaret && this.state.mouseDown) {\r\n                this.scrollOffset = parseInt(((imui.mousePos.y - scrollBarRect.y) / scrollBarRect.h) * (this.list.length - 2))\r\n                if (this.scrollOffset < 0) {\r\n                    this.scrollOffset = 0\r\n                } else if (this.scrollOffset > this.list.length - 1) {\r\n                    this.scrollOffset = this.list.length - 1\r\n                }\r\n                caretBg = this.color\r\n                caretColr = this.bgScrollbar\r\n            } else if (this.draggingCaret) {\r\n                this.draggingCaret = false\r\n            }\r\n            let caretHovered = this.InsideRect(imui.mousePos.x, imui.mousePos.y, { x: scrollBarRect.x, y: scrollBarRect.y + caretPos, w: scrollBarRect.w, h: imui.font.cwidth})\r\n            imui.DrawText(scrollBarRect.x, scrollBarRect.y + caretPos, this.scrollbarCharacters.scrollCaret, caretHovered ? this.highlight : caretColr, { background: { colour: caretBg } })\r\n        }\r\n    }\r\n}\r\n\r\nexport default List","import Element from './Element.js'\r\n\r\nclass Image extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n\r\n        this.image = params.image ? params.image : null\r\n        if (!this.rect.w || !this.rect.h) {\r\n            this.rect.h = this.image.height\r\n            this.rect.w = this.image.width\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.image) {\r\n            if (this.image.tagName === 'IMG') {\r\n                imui.ctx.drawImage(this.image, this.Rect().x, this.Rect().y, this.Rect().w, this.Rect().h)\r\n            } else if (this.image.draw) {\r\n                this.image.draw()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Image","import Element from './Element.js'\r\n\r\nclass FrameImage extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n\r\n        this.image = params.image ? params.image : null\r\n        if (params.innerRect) {\r\n            this.innerRect = params.innerRect\r\n        } else if (params.borderWidth) {\r\n            this.innerRect = {\r\n                x: params.borderWidth,\r\n                y: params.borderWidth,\r\n                w: this.rect.w - params.borderWidth * 2,\r\n                h: this.rect.h - params.borderWidth * 2\r\n            }\r\n        } else {\r\n            this.innerRect = {\r\n                x: 0, y: 0,\r\n                w: this.rect.w, h: this.rect.h\r\n            }\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        if (this.bgcolor) {\r\n            imui.DrawRect(rect, this.bgcolor)\r\n        }\r\n\r\n        if (this.image) {\r\n            // Top Left Corner\r\n            imui.ctx.drawImage(this.image, 0, 0, this.innerRect.x, this.innerRect.y, this.rect.x, this.rect.y, this.innerRect.x, this.innerRect.y)\r\n            // Top Right Corner\r\n            imui.ctx.drawImage(this.image, this.image.width - this.innerRect.x, 0, this.innerRect.x, this.innerRect.y, this.rect.x + this.rect.w - this.innerRect.x, this.rect.y, this.innerRect.x, this.innerRect.y)\r\n            // Bottom Left Corner\r\n            imui.ctx.drawImage(this.image, 0, this.image.height - this.innerRect.y, this.innerRect.x, this.innerRect.y, this.rect.x, this.rect.y + this.rect.h - this.innerRect.y, this.innerRect.x, this.innerRect.y)\r\n            // Bottom Right Corner\r\n            imui.ctx.drawImage(this.image, this.image.width - this.innerRect.x, this.image.height - this.innerRect.y, this.innerRect.x, this.innerRect.y, this.rect.x + this.rect.w - this.innerRect.x, this.rect.y + this.rect.h - this.innerRect.y, this.innerRect.x, this.innerRect.y)\r\n\r\n            // Top Middle Section\r\n            for (let dx = this.rect.x + this.innerRect.x; dx < this.rect.x + this.rect.w - this.innerRect.x; dx += this.image.width - this.innerRect.x * 2) {\r\n                let dw = this.image.width - this.innerRect.x * 2\r\n                if (dx + dw > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    dw = this.rect.x + this.rect.w - this.innerRect.x - dx\r\n                }\r\n                imui.ctx.drawImage(this.image, this.innerRect.x, 0, dw, this.innerRect.y, dx, this.rect.y, dw, this.innerRect.y)\r\n            }\r\n            // Bottom Middle Section\r\n            for (let dx = this.rect.x + this.innerRect.x; dx < this.rect.x + this.rect.w - this.innerRect.x; dx += this.image.width - this.innerRect.x * 2) {\r\n                let dw = this.image.width - this.innerRect.x * 2\r\n                if (dx + dw > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    dw = this.rect.x + this.rect.w - this.innerRect.x - dx\r\n                }\r\n                imui.ctx.drawImage(this.image, this.innerRect.x, this.image.height - this.innerRect.y, dw, this.innerRect.y, dx, this.rect.y + this.rect.h - this.innerRect.y, dw, this.innerRect.y)\r\n            }\r\n\r\n            // Left Middle Section\r\n            for (let dy = this.rect.y + this.innerRect.y; dy < this.rect.y + this.rect.h - this.innerRect.y; dy += this.image.height - this.innerRect.y * 2) {\r\n                let dh = this.image.height - this.innerRect.y * 2\r\n                if (dy + dh > this.rect.y + this.rect.h - this.innerRect.y) {\r\n                    dh = this.rect.y + this.rect.h - this.innerRect.y - dy\r\n                }\r\n                imui.ctx.drawImage(this.image, 0, this.innerRect.y, this.innerRect.x, dh, this.rect.x, dy, this.innerRect.x, dh)\r\n            }\r\n            // Right Middle Section\r\n            for (let dy = this.rect.y + this.innerRect.y; dy < this.rect.y + this.rect.h - this.innerRect.y; dy += this.image.height - this.innerRect.y * 2) {\r\n                let dh = this.image.height - this.innerRect.y * 2\r\n                if (dy + dh > this.rect.y + this.rect.h - this.innerRect.y) {\r\n                    dh = this.rect.y + this.rect.h - this.innerRect.y - dy\r\n                }\r\n                imui.ctx.drawImage(this.image, this.image.width - this.innerRect.x, this.innerRect.y, this.innerRect.x, dh, this.rect.x + this.rect.w - this.innerRect.x, dy, this.innerRect.x, dh)\r\n            }\r\n\r\n            // Centre\r\n            let sx = this.innerRect.x\r\n            let sy = this.innerRect.y\r\n            let sw = this.image.width - this.innerRect.x * 2\r\n            let sh = this.image.height - this.innerRect.y * 2\r\n            let dx = this.innerRect.x + this.rect.x\r\n            let dy = this.innerRect.y + this.rect.y\r\n            while (dy < this.rect.y + this.rect.h - this.innerRect.y) {\r\n                let w = sw\r\n                let h = sh\r\n                if (dx + w > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    w = this.rect.x + this.rect.w - this.innerRect.x - dx\r\n                }\r\n                if (dy + h > this.rect.y + this.rect.h - this.innerRect.y) {\r\n                    h = this.rect.y + this.rect.h - this.innerRect.y - dy\r\n                }\r\n                imui.ctx.drawImage(this.image, sx, sy, w, h, dx, dy, w, h)\r\n                dx += sw\r\n                if (dx > this.rect.x + this.rect.w - this.innerRect.x) {\r\n                    dx = this.innerRect.x + this.rect.x\r\n                    dy += sh\r\n                }\r\n            }\r\n        }\r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n\r\n        imui.DrawText(rect.x + this.innerRect.x, rect.y + this.innerRect.y, txt, this.color)\r\n    }\r\n}\r\n\r\nexport default FrameImage","import Element from './Element.js'\r\n\r\nclass ButtonImage extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n\r\n        this.image = params.image ? params.image : null\r\n        this.imageDown = params.imageDown ? params.imageDown : null\r\n        this.imageHover = params.imageHover ? params.imageHover : null\r\n        \r\n        this.pressedOffsetY = params.pressedOffsetY ? params.pressedOffsetY : 2\r\n\r\n        if (params.innerRect) {\r\n            this.innerRect = params.innerRect\r\n        } else if (params.borderWidth) {\r\n            this.innerRect = {\r\n                x: params.borderWidth,\r\n                y: params.borderWidth,\r\n                w: this.Rect().w - params.borderWidth * 2,\r\n                h: this.Rect().h - params.borderWidth * 2\r\n            }\r\n        } else {\r\n            this.innerRect = {\r\n                x: 0, y: 0,\r\n                w: this.Rect().w, h: this.Rect().h\r\n            }\r\n        }\r\n    }\r\n\r\n    drawImageSlice(imui, image) {\r\n        if (image) {\r\n            // Top Left Corner\r\n            imui.ctx.drawImage(image, 0, 0, this.innerRect.x, this.innerRect.y, this.Rect().x, this.Rect().y, this.innerRect.x, this.innerRect.y)\r\n            \r\n            // Top Right Corner\r\n            let x2 = image.width - (this.innerRect.x + this.innerRect.w)\r\n            imui.ctx.drawImage(image, image.width - x2, 0, x2, this.innerRect.y, this.Rect().x + this.Rect().w - x2, this.Rect().y, x2, this.innerRect.y)\r\n\r\n            // Bottom Right Corner\r\n            let y2 = image.height - (this.innerRect.y + this.innerRect.h)\r\n            imui.ctx.drawImage(image, image.width - x2, image.height - y2, x2, y2, this.Rect().x + this.Rect().w - x2, this.Rect().y + this.Rect().h - y2, x2, y2)\r\n\r\n            // Bottom Left Corner\r\n            imui.ctx.drawImage(image, 0, image.height - y2, this.innerRect.x, y2, this.Rect().x, this.Rect().y + this.Rect().h - y2, this.innerRect.x, y2)\r\n\r\n            // Top Middle Section\r\n            for (let dx = this.Rect().x + this.innerRect.x; dx < this.Rect().x + this.Rect().w - x2; dx += this.innerRect.w) {\r\n                let dw = image.width - x2\r\n                if (dx + dw > this.Rect().x + this.Rect().w - x2) {\r\n                    dw = this.Rect().x + this.Rect().w - x2 - dx\r\n                }\r\n                imui.ctx.drawImage(image, this.innerRect.x, 0, dw, this.innerRect.y, dx, this.Rect().y, dw, this.innerRect.y)\r\n            }\r\n            // Bottom Middle Section\r\n            for (let dx = this.Rect().x + this.innerRect.x; dx < this.Rect().x + this.Rect().w - x2; dx += this.innerRect.w) {\r\n                let dw = image.width - x2\r\n                if (dx + dw > this.Rect().x + this.Rect().w - x2) {\r\n                    dw = this.Rect().x + this.Rect().w - x2 - dx\r\n                }\r\n                imui.ctx.drawImage(image, this.innerRect.x, image.height - y2, dw, y2, dx, this.Rect().y + this.Rect().h - y2, dw, y2)\r\n            }\r\n\r\n            // Left Middle Section\r\n            for (let dy = this.Rect().y + this.innerRect.y; dy < this.Rect().y + this.Rect().h - y2; dy += this.innerRect.h) {\r\n                let dh = image.height - y2\r\n                if (dy + dh > this.Rect().y + this.Rect().h - y2) {\r\n                    dh = this.Rect().y + this.Rect().h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, 0, this.innerRect.y, this.innerRect.x, dh, this.Rect().x, dy, this.innerRect.x, dh)\r\n            }\r\n            // Right Middle Section\r\n            for (let dy = this.Rect().y + this.innerRect.y; dy < this.Rect().y + this.Rect().h - y2; dy += this.innerRect.h) {\r\n                let dh = image.height - y2\r\n                if (dy + dh > this.Rect().y + this.Rect().h - y2) {\r\n                    dh = this.Rect().y + this.Rect().h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, image.width - x2, this.innerRect.y, x2, dh, this.Rect().x + this.Rect().w - x2, dy, x2, dh)\r\n            }\r\n\r\n            // Centre\r\n            \r\n            let sx = this.innerRect.x\r\n            let sy = this.innerRect.y\r\n            let sw = this.innerRect.w\r\n            let sh = this.innerRect.h\r\n            let dx = this.innerRect.x + this.Rect().x\r\n            let dy = this.innerRect.y + this.Rect().y\r\n            while (dy < this.Rect().y + this.Rect().h - y2) {\r\n                let w = sw\r\n                let h = sh\r\n                if (dx + w > this.Rect().x + this.Rect().w - x2) {\r\n                    w = this.Rect().x + this.Rect().w - x2 - dx\r\n                }\r\n                if (dy + h > this.Rect().y + this.Rect().h - y2) {\r\n                    h = this.Rect().y + this.Rect().h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, sx, sy, w, h, dx, dy, w, h)\r\n                dx += sw\r\n                if (dx > this.Rect().x + this.Rect().w - x2) {\r\n                    dx = this.innerRect.x + this.Rect().x\r\n                    dy += sh\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _Draw(imui, rect) {\r\n        let offy = this.state.mouseDown ? this.pressedOffsetY : 0\r\n        let colr = this.Hover() ? this.highlight : this.color\r\n\r\n        if (this.Hover() && !this.state.mouseDown && this.imageHover) {\r\n            this.drawImageSlice(imui, this.imageHover)\r\n        } else if (this.state.mouseDown && this.imageDown) {\r\n            this.drawImageSlice(imui, this.imageDown)\r\n        } else {\r\n            this.drawImageSlice(imui, this.image)\r\n        }\r\n        \r\n        let txt = this.text.length > (rect.w - 2) / imui.font.cwidth ? this.text.substr(0, parseInt((rect.w - 2) / imui.font.cwidth)) : this.text\r\n    \r\n\r\n        imui.DrawText(rect.x + (rect.w / 2) - (txt.length * imui.font.cwidth) / 2, rect.y + (rect.h / 2) - (imui.font.cheight / 2) + offy, txt, colr)\r\n    }\r\n}\r\n\r\nexport default ButtonImage","import Element from './Element.js'\r\n\r\nclass ListImage extends Element {\r\n    constructor(params) {\r\n        super(params)\r\n        this.list = params.list ? params.list : []\r\n        this.currentItem = null\r\n        this.selectedList = []\r\n        this.scrollOffset = params.scrollOffset ? params.scrollOffset : 0\r\n        this.topDown = params.topDown ? params.topDown : true\r\n        this.horizontal = params.horizontal ? params.horizontal : false\r\n        this.scrollbar = params.scrollbar ? params.scrollbar : true\r\n        this.multiSelect = params.multiSelect ? params.multiSelect : false\r\n        \r\n        this.bgcolorSelected = params.bgcolorSelected ? params.bgcolorSelected : '#f1f1f1ff'\r\n        this.colorSelected = params.colorSelected ? params.colorSelected : '#090909ff'\r\n\r\n        this.scrollbarWidth = params.scrollbarWidth ? params.scrollbarWidth : 8\r\n        this.checkboxImage = params.checkboxImage ? params.checkboxImage : { image: null, hover: null, pressed: null, innerRect: null }\r\n        this.caratImage = params.caratImage ? params.caratImage : { image: null, hover: null, pressed: null, innerRect: null }\r\n        this.upImage = params.upImage ? params.upImage : { image: null, hover: null, pressed: null, innerRect: null }\r\n        this.downImage = params.downImage ? params.downImage : { image: null, hover: null, pressed: null, innerRect: null }\r\n        this.scrollAreaImage = params.scrollAreaImage ? params.scrollAreaImage : { image: null, hover: null, pressed: null, innerRect: null }\r\n\r\n        this.draggingCaret = false\r\n\r\n        if (params.innerRect) {\r\n            this.innerRect = params.innerRect\r\n        } else if (params.borderWidth) {\r\n            this.innerRect = {\r\n                x: params.borderWidth,\r\n                y: params.borderWidth + this.scrollbarWidth,\r\n                w: this.Rect().w - this.scrollbarWidth,\r\n                h: this.Rect().h - this.scrollbarWidth * 2\r\n            }\r\n        } else {\r\n            this.innerRect = {\r\n                x: 0, y: 0,\r\n                w: this.Rect().w, h: this.Rect().h\r\n            }\r\n        }\r\n    }\r\n\r\n    drawImageSlice(imui, image, rect, innerRect) {\r\n        if (image) {\r\n            // Top Left Corner\r\n            imui.ctx.drawImage(image, 0, 0, innerRect.x, innerRect.y, rect.x, rect.y, innerRect.x, innerRect.y)\r\n            \r\n            // Top Right Corner\r\n            let x2 = image.width - (innerRect.x + innerRect.w)\r\n            imui.ctx.drawImage(image, image.width - x2, 0, x2, innerRect.y, rect.x + rect.w - x2, rect.y, x2, innerRect.y)\r\n\r\n            // Bottom Right Corner\r\n            let y2 = image.height - (innerRect.y + innerRect.h)\r\n            imui.ctx.drawImage(image, image.width - x2, image.height - y2, x2, y2, rect.x + rect.w - x2, rect.y + rect.h - y2, x2, y2)\r\n\r\n            // Bottom Left Corner\r\n            imui.ctx.drawImage(image, 0, image.height - y2, innerRect.x, y2, rect.x, rect.y + rect.h - y2, innerRect.x, y2)\r\n\r\n            // Top Middle Section\r\n            for (let dx = rect.x + innerRect.x; dx < rect.x + rect.w - x2; dx += innerRect.w) {\r\n                let dw = image.width - x2\r\n                if (dx + dw > rect.x + rect.w - x2) {\r\n                    dw = rect.x + rect.w - x2 - dx\r\n                }\r\n                imui.ctx.drawImage(image, innerRect.x, 0, dw, innerRect.y, dx, rect.y, dw, innerRect.y)\r\n            }\r\n            // Bottom Middle Section\r\n            for (let dx = rect.x + innerRect.x; dx < rect.x + rect.w - x2; dx += innerRect.w) {\r\n                let dw = image.width - x2\r\n                if (dx + dw > rect.x + rect.w - x2) {\r\n                    dw = rect.x + rect.w - x2 - dx\r\n                }\r\n                imui.ctx.drawImage(image, innerRect.x, image.height - y2, dw, y2, dx, rect.y + rect.h - y2, dw, y2)\r\n            }\r\n\r\n            // Left Middle Section\r\n            for (let dy = rect.y + innerRect.y; dy < rect.y + rect.h - y2; dy += innerRect.h) {\r\n                let dh = image.height - y2\r\n                if (dy + dh > rect.y + rect.h - y2) {\r\n                    dh = rect.y + rect.h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, 0, innerRect.y, innerRect.x, dh, rect.x, dy, innerRect.x, dh)\r\n            }\r\n            // Right Middle Section\r\n            for (let dy = rect.y + innerRect.y; dy < rect.y + rect.h - y2; dy += innerRect.h) {\r\n                let dh = image.height - y2\r\n                if (dy + dh > rect.y + rect.h - y2) {\r\n                    dh = rect.y + rect.h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, image.width - x2, innerRect.y, x2, dh, rect.x + rect.w - x2, dy, x2, dh)\r\n            }\r\n\r\n            // Centre\r\n            \r\n            let sx = innerRect.x\r\n            let sy = innerRect.y\r\n            let sw = innerRect.w\r\n            let sh = innerRect.h\r\n            let dx = innerRect.x + rect.x\r\n            let dy = innerRect.y + rect.y\r\n            while (dy < rect.y + rect.h - y2) {\r\n                let w = sw\r\n                let h = sh\r\n                if (dx + w > rect.x + rect.w - x2) {\r\n                    w = rect.x + rect.w - x2 - dx\r\n                }\r\n                if (dy + h > rect.y + rect.h - y2) {\r\n                    h = rect.y + rect.h - y2 - dy\r\n                }\r\n                imui.ctx.drawImage(image, sx, sy, w, h, dx, dy, w, h)\r\n                dx += sw\r\n                if (dx > rect.x + rect.w - x2) {\r\n                    dx = innerRect.x + rect.x\r\n                    dy += sh\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _Draw(imui) {\r\n\r\n        let rect = this.Rect()\r\n        let textcolor = this.color\r\n        let bgcolor = this.bgcolor\r\n\r\n        if (this.state.mouseOver && !this.state.mouseDown && this.highlight) {\r\n            textcolor = this.highlight\r\n        }\r\n\r\n        if (bgcolor) {\r\n            imui.DrawRect(rect, bgcolor)\r\n        }\r\n\r\n        let dx = rect.x + imui.font.cwidth\r\n        let dy = rect.y\r\n        let indentAmt = this.multiSelect ? 9 : 0\r\n        this.hoverItem = null\r\n        for (let l = this.scrollOffset; l < this.list.length; l++) {\r\n            let txt = this.list[l]\r\n\r\n            let txtRect = { x: dx, y: dy, w: this.GetMaxTextWidth(imui.font, txt) + 1 + indentAmt, h: imui.font.cheight }\r\n            let isHoverItem = this.state.mouseOver &&\r\n                imui.mousePos.y >= txtRect.y && imui.mousePos.x >= txtRect.x &&\r\n                imui.mousePos.x < txtRect.x + txtRect.w && imui.mousePos.y < txtRect.y + txtRect.h\r\n            let isMouseOverItem = imui.mousePos.y >= txtRect.y && imui.mousePos.x >= txtRect.x &&\r\n                    imui.mousePos.x < txtRect.x + txtRect.w && imui.mousePos.y < txtRect.y + txtRect.h\r\n            if (isHoverItem) {\r\n                this.hoverItem = l\r\n            }        \r\n            if (this.state.mouseDown && isMouseOverItem && this.currentItem !== l) {\r\n                if (this.multiSelect) {\r\n                    let selectedIndex = this.selectedList.findIndex(f => f === l)\r\n                    if (selectedIndex >= 0) {\r\n                        this.selectedList = this.selectedList.filter((f, index) => index !== selectedIndex)\r\n                        this.currentItem = null\r\n                    } else {\r\n                        this.selectedList.push(l)\r\n                    }\r\n                } else {\r\n                    this.selectedList = [l]\r\n                }\r\n                this.currentItem = l\r\n            } else if (this.state.mouseUp && isMouseOverItem && this.currentItem === l) {\r\n                console.log(this.state.clicked, this.state, this.prevState.clicked, this.prevState)\r\n            }\r\n            \r\n            imui.DrawRect(txtRect, this.selectedList.includes(l) ? this.bgcolorSelected : bgcolor)\r\n            imui.DrawText(indentAmt + dx + 1, dy + 1, txt, isHoverItem ? textcolor : this.selectedList.includes(l) ? this.colorSelected : this.color) //, isHoverItem || this.currentItem === l ? { background: { colour: isMouseDownItem ? this.bgcolorSelected : bgcolor }} : undefined)\r\n            if (this.multiSelect && this.checkboxImage.image) {\r\n                imui.ctx.drawImage(this.selectedList.includes(l) ? this.checkboxImage.pressed : this.checkboxImage.image, dx, dy)\r\n            }\r\n\r\n            if (!this.horizontal) {\r\n                dy += imui.font.cheight\r\n            } else {\r\n                dx += imui.font.cwidth * (txt.length + 1)\r\n            }\r\n            if (dx > rect.x + rect.w) {\r\n                break\r\n            }\r\n            if (dy + imui.font.cheight > rect.y + rect.h) {\r\n                break\r\n            }\r\n        }\r\n        \r\n        if (rect.h < imui.font.cheight * this.list.length && !this.horizontal) {\r\n            let upRect = { x: rect.x + rect.w - this.scrollbarWidth, y: rect.y, w: this.scrollbarWidth, h: this.scrollbarWidth}\r\n            let downRect = { x: rect.x + rect.w - this.scrollbarWidth, y: rect.y + rect.h - this.scrollbarWidth, w: this.scrollbarWidth, h: this.scrollbarWidth}\r\n            let scrollBarRect = { x: rect.x + rect.w - this.scrollbarWidth, y: rect.y + this.scrollbarWidth, w: this.scrollbarWidth, h: rect.h - (this.scrollbarWidth * 2) }\r\n\r\n            let caretPos = parseInt((this.scrollOffset / (this.list.length - 1)) * (scrollBarRect.h - this.scrollbarWidth ))\r\n            let caretRect = { x: scrollBarRect.x, y: scrollBarRect.y + caretPos, w: scrollBarRect.w, h: this.scrollbarWidth }\r\n\r\n            if (this.scrollAreaImage.image) {\r\n                this.drawImageSlice(imui, this.scrollAreaImage.image, { x: upRect.x, y: upRect.y, w: scrollBarRect.w, h: upRect.h + downRect.h + scrollBarRect.h }, this.scrollAreaImage.innerRect)\r\n            } else {\r\n                imui.DrawRect(scrollBarRect, '#c0c0c0ff')\r\n            }\r\n\r\n            let downHovered = this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect)\r\n            if (this.downImage.image) {\r\n                imui.ctx.drawImage(this.downImage.hover && downHovered ? this.state.mouseDown ? this.downImage.pressed : this.downImage.hover\r\n                    : this.downImage.image, downRect.x, downRect.y)\r\n            } else {\r\n                imui.DrawRect(downRect, '#f1f1f1ff')\r\n            }\r\n\r\n            let upHovered = this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect)\r\n            if (this.upImage.image) {\r\n                imui.ctx.drawImage(this.upImage.hover && upHovered ? this.state.mouseDown ? this.upImage.pressed : this.upImage.hover\r\n                    : this.upImage.image, upRect.x, upRect.y)\r\n            } else {\r\n                imui.DrawRect(upRect, '#f1f1f1ff')\r\n            }\r\n\r\n            let caretHovered = this.InsideRect(imui.mousePos.x, imui.mousePos.y, caretRect)\r\n            if (this.caratImage.image) {\r\n                imui.ctx.drawImage(this.caratImage.hover && caretHovered ? this.state.mouseDown ? this.caratImage.pressed : this.caratImage.hover\r\n                    : this.caratImage.image, caretRect.x, caretRect.y)\r\n            } else {\r\n                imui.DrawRect(caretRect, caretHovered ? '#f1f1c1ff' : '#e1e1e1ff')\r\n            }\r\n\r\n            // imui.DrawText(upRect.x, upRect.y, this.scrollbarCharacters.scrollUp, this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.state.mouseDown ? this.highlight : this.color, \r\n            //     this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.state.mouseDown ? { background: { colour: this.color } } : { background: { colour: this.bgScrollbar } })\r\n            // imui.DrawText(downRect.x, downRect.y, this.scrollbarCharacters.scrollDown, this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.state.mouseDown ? this.highlight : this.color, \r\n            //     this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.state.mouseDown ? { background: { colour: this.color } } : { background: { colour: this.bgScrollbar } })\r\n\r\n            let caretColr = this.color\r\n            let caretBg = this.bgScrollbar\r\n\r\n            if (!this.draggingCaret) {\r\n                if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, upRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        this.scrollOffset = this.scrollOffset - 1 < 0 ? 0: this.scrollOffset - 1\r\n                    }\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, downRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        this.scrollOffset = this.scrollOffset + 1 > this.list.length - 1 ? this.list.length - 1: this.scrollOffset + 1\r\n                    }\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, caretRect) && this.state.mouseDown) {\r\n                    this.draggingCaret = true\r\n                } else if (this.InsideRect(imui.mousePos.x, imui.mousePos.y, scrollBarRect) && this.Clicked()) {\r\n                    if (this.scrollOffset !== null) {\r\n                        if (imui.mousePos.y < scrollBarRect.y + caretPos) {\r\n                            this.scrollOffset = this.scrollOffset - 10 > 0 ? this.scrollOffset - 10 : 0\r\n                        } else if (imui.mousePos.y > scrollBarRect.y + caretPos + imui.font.cheight) {\r\n                            this.scrollOffset = this.scrollOffset + 10 < this.list.length - 1 ? this.scrollOffset + 10 : this.list.length - 1\r\n                        }\r\n                    }\r\n                }\r\n            } else if (this.draggingCaret && this.state.mouseDown) {\r\n                this.scrollOffset = parseInt(((imui.mousePos.y - scrollBarRect.y) / (scrollBarRect.h - upRect.h)) * (this.list.length - 1))\r\n                if (this.scrollOffset < 0) {\r\n                    this.scrollOffset = 0\r\n                } else if (this.scrollOffset > this.list.length - 1) {\r\n                    this.scrollOffset = this.list.length - 1\r\n                }\r\n                caretBg = this.color\r\n                caretColr = this.bgScrollbar\r\n            } else if (this.draggingCaret) {\r\n                this.draggingCaret = false\r\n            }\r\n\r\n            //imui.DrawText(scrollBarRect.x, scrollBarRect.y + caretPos, this.scrollbarCharacters.scrollCaret, caretHovered ? this.highlight : caretColr, { background: { colour: caretBg } })\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListImage","import { GetElementType } from './elements.js'\r\n\r\nlet updateDelay = 8\r\n\r\nfunction BezierBlend(t)\r\n{\r\n    return t * t * (3.0 - 2.0 * t)\r\n}\r\n\r\nclass ImUI {\r\n    constructor(canvas, font) {\r\n        this.canvas = canvas\r\n        this.originalCanvas = canvas\r\n        this.ctx = canvas.getContext('2d')\r\n        this.originalCtx = this.ctx\r\n        bfontjs.LoadDefaultFonts()\r\n        this.font = font ? font : bfontjs.Fonts('default')\r\n\r\n        this.lastRect = null\r\n\r\n        this.mousePos = { x: 0, y: 0 }\r\n        this.mouseButton = 0\r\n        \r\n        this.active = null\r\n        this.elements = []\r\n        this.postUpdateIds = []\r\n          \r\n        this.onUpdate = () => {\r\n            return []\r\n        }\r\n\r\n        this.canvas.addEventListener('mousemove', (e) => {\r\n            if (this.executing) {\r\n                this.mousePos.x = parseInt((e.clientX - canvas.offsetLeft) * (this.canvas.width / parseInt(this.canvas.style.width)))\r\n                this.mousePos.y = parseInt((e.clientY - canvas.offsetTop) * (this.canvas.height / parseInt(this.canvas.style.height)))\r\n            }\r\n        })\r\n\r\n        this.canvas.addEventListener('mousedown', (e) => {\r\n            if (this.executing) {\r\n                this.mouseButton = e.buttons\r\n            }\r\n        })\r\n        \r\n        this.canvas.addEventListener('mouseup', (e) => {\r\n            if (this.executing) {\r\n                this.mouseButton = 0\r\n            }\r\n        })\r\n\r\n        window.addEventListener('keydown', (e) => {\r\n            if (this.executing) {\r\n                if (e.key === 'Tab') {\r\n                e.preventDefault()                \r\n                }\r\n            }\r\n        })\r\n\r\n        window.addEventListener('keyup', (e) => {\r\n            if (this.executing) {\r\n                if (this.active) {\r\n                    let element = this.elements.filter(f => f !== undefined).filter(f => f.id === this.active)\r\n                    if (element.length > 0 && element[0].editable) {\r\n                        if (e.key.length === 1) {\r\n                            element[0].prevText = element[0].text\r\n                            element[0].text += e.key\r\n                        } else if (e.key === 'Backspace') {\r\n                            element[0].prevText = element[0].text\r\n                            element[0].text = element[0].text.substring(0, element[0].text.length - 1)\r\n                        } else if (e.key === 'Enter') {\r\n                            this.active = null\r\n                        }\r\n                    }\r\n                    if (element.length > 0) {\r\n                        if (e.key === 'Tab') {\r\n                            let index = this.elements.findIndex(f => f.id === this.active)\r\n                            if (index + 1 < this.elements.length) {\r\n                                index++\r\n                            } else {\r\n                                index = 0\r\n                            }\r\n                            this.active = this.elements[index].id\r\n                        }\r\n                    }\r\n                } else if (this.elements.length > 0) {\r\n                    if (e.key === 'Tab') {\r\n                        this.active = this.elements[0].id\r\n                    }\r\n                }\r\n            }\r\n            return false\r\n        })\r\n        \r\n        this.Enable()\r\n    }\r\n\r\n    Disable() {\r\n        this.executing = false\r\n    }\r\n\r\n    Enable() {\r\n        this.executing = true\r\n        this.UpdateThread()\r\n    }\r\n\r\n    // Update async thread.\r\n    UpdateThread() {\r\n        try {\r\n            if (this.executing) {\r\n                let preUpdateIds = this.elements.map(el => el.id)\r\n\r\n                this.postUpdateIds = []\r\n\r\n                this.elements = this.elements.filter(f => f !== undefined)\r\n                this.onUpdate(this)\r\n\r\n                for (let id in preUpdateIds) {\r\n                    if (this.postUpdateIds.filter(f => f === preUpdateIds[id]).length === 0) {\r\n                        this.elements[this.elements.findIndex(f => f !== undefined && f.id === preUpdateIds[id])] = undefined\r\n                    }\r\n                }\r\n                this.elements = this.elements.filter(f => f !== undefined)\r\n        \r\n                this.Update()\r\n            \r\n                setTimeout(() => this.UpdateThread(), updateDelay)\r\n            }\r\n        } catch (e) { console.error(e) }\r\n    }\r\n\r\n    ChangeContext(canvas) {\r\n        this.canvas = canvas\r\n        this.ctx = canvas.getContext('2d')\r\n    }\r\n    \r\n    ResetContext() {\r\n        this.canvas = this.originalCanvas\r\n        this.ctx = this.originalCtx\r\n    }\r\n\r\n    RemoveElement(id) {\r\n        let index = this.elements.findIndex(f => f.id === id)\r\n        if (index >= 0) {\r\n            let elements = []\r\n            for (let e in this.elements) {\r\n                let element = this.elements[e]\r\n                if (element.id !== id) {\r\n                    elements.push(element)\r\n                }\r\n            }\r\n            this.elements = elements\r\n        }\r\n    }\r\n\r\n    RemoveElements() {\r\n        this.elements = []\r\n    }\r\n\r\n    ElementToTop(id) {\r\n        let index = this.elements.findIndex(f => f.id === id)\r\n        if (index >= 0) {\r\n            let elements = []\r\n            if (index - 1 >= 0) {\r\n                elements = this.elements.slice(0, index)\r\n            }\r\n            if (index + 1 <= this.elements.length - 1) {\r\n                elements.push(...this.elements.slice(index + 1))\r\n            }\r\n            elements.push(this.elements[index])\r\n            this.elements = elements\r\n        }\r\n    }\r\n\r\n    GetMaxTextWidth(txt) {\r\n        let font = this.font\r\n        let lines = []\r\n        try {\r\n            if (typeof txt === 'number') {\r\n                txt = font.codepage.filter(f => f.codenumber === txt)[0].symbol\r\n            }\r\n            lines = txt.split('\\n')\r\n        } catch (e) {\r\n            console.log('Error splitting txt parameters: ', e, ' typeof txt =', typeof txt)\r\n        }\r\n        let w = 0\r\n        for (let l in lines) {\r\n            let line = lines[l]\r\n            if (line.length * font.cwidth > w) {\r\n                w = line.length * font.cwidth\r\n            }\r\n        }\r\n        return w\r\n    }\r\n\r\n    Element(params, parent) {\r\n        params.type = params.type ? params.type : 'element'\r\n        let elem = this.elements.filter(f => f.id === params.id)\r\n        if (elem.length === 0) {\r\n            let ElementClass = GetElementType(params.type)\r\n            let el = new ElementClass(params)\r\n            el.Update(this, false)\r\n            this.elements.push(el)\r\n            this.postUpdateIds.push(params.id)\r\n            this.lastRect = el.rect\r\n            if (parent) {\r\n                el.parent = parent\r\n            }\r\n            return el\r\n        } else {\r\n            this.postUpdateIds.push(params.id)\r\n            for (let p in params) {\r\n                if (p !== 'anim') {\r\n                    elem[0][p] = params[p]\r\n                }\r\n            }\r\n            this.lastRect = elem[0].rect\r\n            if (parent && !elem[0].parent) {\r\n                elem[0].parent = parent\r\n            }\r\n            return elem[0]\r\n        }\r\n    }\r\n\r\n    DrawTextFont(font, x, y, text, color, effects) {\r\n        if (text === undefined || text === \"\") {\r\n            return\r\n        }\r\n        return bfontjs.DrawText(this.ctx, parseInt(x), parseInt(y), text, color, font, effects)\r\n    }\r\n\r\n    DrawText(x, y, text, color, effects) {\r\n        return this.DrawTextFont(this.font, x, y, text, color, effects)\r\n    }\r\n    \r\n    DrawRect(rect, color) {\r\n        this.ctx.fillStyle = color\r\n        this.ctx.fillRect(rect.x, rect.y, rect.w, rect.h)\r\n    }\r\n    \r\n    StrokeRect(rect, color) {\r\n        this.ctx.lineWidth = 1\r\n        this.ctx.strokeStyle = color\r\n        this.ctx.strokeRect(parseInt(rect.x) + 0.5, parseInt(rect.y) + 0.5, parseInt(rect.w), parseInt(rect.h))\r\n    }\r\n    StrokeLine(x, y, x2, y2, color) {\r\n        this.ctx.lineWidth = 1\r\n        this.ctx.strokeStyle = color\r\n\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(parseInt(x) + 0.5, parseInt(y) + 0.5)\r\n        this.ctx.lineTo(parseInt(x2) + 0.5, parseInt(y2) + 0.5)\r\n        this.ctx.stroke()\r\n    }\r\n\r\n    Update() {\r\n        let eventHandled = false\r\n        for (let e = this.elements.length - 1; e >= 0; e--) {\r\n            if (!eventHandled && this.elements[e]) {\r\n                eventHandled = this.elements[e].Update(this, eventHandled)\r\n            }\r\n        }\r\n    }\r\n\r\n    Draw() {\r\n        for (let e in this.elements) {\r\n            if (this.elements[e]) {\r\n                this.elements[e].Draw(this)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport { ImUI, BezierBlend, updateDelay }","import Element from './elements/Element.js'\r\nimport FrameFlat from './elements/FrameFlat.js'\r\nimport Frame3d from './elements/Frame3d.js'\r\nimport Button3d from './elements/Button3d.js'\r\nimport ButtonFlat from './elements/ButtonFlat.js'\r\nimport TextBoxFlat from './elements/TextBoxFlat.js'\r\nimport List from './elements/List.js'\r\nimport Image from './elements/Image.js'\r\nimport FrameImage from './elements/FrameImage.js'\r\nimport ButtonImage from './elements/ButtonImage.js'\r\nimport ListImage from './elements/ListImage.js'\r\n\r\nfunction GetElementType(type) {\r\n    switch(type.toLowerCase()) {\r\n        case 'element':\r\n            return Element\r\n        case 'frameflat':\r\n            return FrameFlat\r\n        case 'frame3d':\r\n            return Frame3d\r\n        case 'button3d':\r\n            return Button3d\r\n        case 'buttonflat':\r\n            return ButtonFlat\r\n        case 'textboxflat':\r\n            return TextBoxFlat\r\n        case 'list':\r\n            return List\r\n        case 'image':\r\n            return Image\r\n        case 'frameimage':\r\n            return FrameImage\r\n        case 'buttonimage':\r\n            return ButtonImage\r\n        case 'listimage':\r\n            return ListImage\r\n    }\r\n}\r\n\r\nexport { Element, FrameFlat, Frame3d, Button3d, ButtonFlat, TextBoxFlat, List, Image, FrameImage, ButtonImage, GetElementType }"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__517__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","constructor","params","id","Error","this","autosize","rect","x","y","w","h","color","bgcolor","text","prevText","anim","wrap","font","imui","state","clicked","mouseOver","mouseDown","mouseUp","change","prevState","DidChangeState","BuildPreviousState","InsideRect","Rect","Clicked","Hover","MouseDown","MouseUp","setState","p","parent","Update","eventHandled","evt","curve","elapsed","param","startVal","destination","parseInt","BezierBlend","duration","updateDelay","onComplete","active","changed","mousePos","mouseButton","GetMaxTextWidth","txt","lines","codepage","filter","f","codenumber","symbol","split","e","console","log","l","line","lineLen","c","char","length","GetWrappedText","wrapPos","cwidth","join","newLines","push","slice","trim","GetWordWrappedText","index","substring","reverse","search","DoTextWrap","bfontjs","Fonts","default","rectCharWidth","Math","floor","wid","hgt","cheight","DrawText","textcolor","highlight","DrawTextFont","_Draw","DrawRect","cfont","Draw","ctx","save","beginPath","closePath","clip","restore","Animate","fromRect","toRect","super","drawBuffer","InitializeBuffer","substr","borderRect","StrokeRect","inverted","shadow","StrokeLine","mx","my","leftChar","rightChar","defaultText","editable","Text","Date","now","bgScrollbar","list","currentItem","scrollOffset","topDown","horizontal","scrollbar","scrollbarCharacters","scrollUp","scrollDown","scrollCaret","draggingCaret","dx","dy","txtRect","isHoverItem","isMouseDownItem","background","colour","upRect","downRect","scrollBarRect","caretPos","caretColr","caretBg","caretHovered","image","height","width","tagName","drawImage","draw","innerRect","borderWidth","dw","dh","sx","sy","sw","sh","imageDown","imageHover","pressedOffsetY","drawImageSlice","x2","y2","offy","colr","selectedList","multiSelect","bgcolorSelected","colorSelected","scrollbarWidth","checkboxImage","hover","pressed","caratImage","upImage","downImage","scrollAreaImage","indentAmt","hoverItem","isMouseOverItem","selectedIndex","findIndex","includes","caretRect","downHovered","upHovered","t","ImUI","canvas","originalCanvas","getContext","originalCtx","LoadDefaultFonts","lastRect","elements","postUpdateIds","onUpdate","addEventListener","executing","clientX","offsetLeft","style","clientY","offsetTop","buttons","window","preventDefault","element","Enable","Disable","UpdateThread","preUpdateIds","map","el","setTimeout","error","ChangeContext","ResetContext","RemoveElement","RemoveElements","ElementToTop","Element","type","elem","toLowerCase","GetElementType","effects","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","moveTo","lineTo","stroke"],"sourceRoot":""}